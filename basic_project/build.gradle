apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), "room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            //abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"//显示Log
            buildConfigField "String", "AES_KEY_PART2", "\"3456\""
            buildConfigField "boolean", "isModuleAAsApp", "${isModuleAAsApp.toBoolean()}"
            buildConfigField "boolean", "isModuleBAsApp", "${isModuleBAsApp.toBoolean()}"
            buildConfigField "boolean", "isModuleCAsApp", "${isModuleCAsApp.toBoolean()}"
            buildConfigField "boolean", "isModuleDAsApp", "${isModuleDAsApp.toBoolean()}"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"//不显示Log
            buildConfigField "String", "AES_KEY_PART2", "\"3456\""
            buildConfigField "boolean", "isModuleAAsApp", "${isModuleAAsApp.toBoolean()}"
            buildConfigField "boolean", "isModuleBAsApp", "${isModuleBAsApp.toBoolean()}"
            buildConfigField "boolean", "isModuleCAsApp", "${isModuleCAsApp.toBoolean()}"
            buildConfigField "boolean", "isModuleDAsApp", "${isModuleDAsApp.toBoolean()}"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations {
        cleanedAnnotations
        compile.exclude group: 'org.jetbrains', module: 'annotations'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.extJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCoreVersion"

    api project(path: ':basic_library')

    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompiler"
    //Room持久性库 - For Kotlin use kapt instead of annotationProcessor
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
}
