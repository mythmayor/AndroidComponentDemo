if (isModuleBAsApp.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        if (isModuleBAsApp.toBoolean()) {
            applicationId "com.mythmayor.moduleb"
        }
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), "room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            //abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    sourceSets {
        main {
            if (!isModuleBAsApp.toBoolean()) {
                manifest.srcFile 'src/library/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //全部Module一起编译的时候剔除debug目录
                    exclude '**/library/**'
                }
            }
        }
    }

    //配置keystore签名
    signingConfigs {
        releaseConfig {
            storeFile file('../test.jks')
            storePassword '123456'
            keyAlias 'test'
            keyPassword '123456'
        }
        debugConfig {
            storeFile file('../test.jks')
            storePassword '123456'
            keyAlias 'test'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            if (isModuleBAsApp.toBoolean()) {
                //开启混淆，删除无用代码
                minifyEnabled true
                //开启删除无用资源
                shrinkResources true
                signingConfig signingConfigs.releaseConfig
            } else {
                minifyEnabled false
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            if (isModuleBAsApp.toBoolean()) {
                signingConfig signingConfigs.debugConfig
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.extJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCoreVersion"

    api project(path: ':basic_project')
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompiler"
    //Room持久性库 - For Kotlin use kapt instead of annotationProcessor
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
}
