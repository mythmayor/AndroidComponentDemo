apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), "room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api "androidx.appcompat:appcompat:$rootProject.ext.supportLibraryVersion"
    api "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayoutVersion"
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.extJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCoreVersion"

    api "androidx.legacy:legacy-support-v4:$rootProject.ext.legacyVersion"
    api "com.google.android.material:material:$rootProject.ext.materialVersion"
    api "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"//glide
    api "com.google.code.gson:gson:$rootProject.ext.gsonVersion"//gson
    api "com.zhy:okhttputils:$rootProject.ext.okhttputilsVersion"//okhttputils
    api "org.greenrobot:eventbus:$rootProject.ext.eventbusVersion"//eventbus
    api "androidx.lifecycle:lifecycle-runtime:$rootProject.ext.lifecycleVersion"//lifecycle
    api "androidx.lifecycle:lifecycle-extensions:$rootProject.ext.lifecycleExtensionsVersion"//lifecycle-extensions
    api "com.android.support:multidex:$rootProject.ext.multidexVersion"//解决方法数超过65535的报错问题
    //ARouter
    api("com.alibaba:arouter-api:$rootProject.ext.arouterApi") {
        exclude group: 'com.android.support'
    }
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompiler"
    //leakcanary: 使用debugImplementation,因为LeakCanary只应该在调试版本中使用。另外当前版本无需在Application中进行初始化。
    debugApi "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakcanaryVersion"
    //okhttp3
    api "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.loggingInterceptorVersion"
    //retrofit2
    api "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava3:$rootProject.ext.retrofitVersion"
    //AutoDispose解决RxJava内存泄漏
    api "com.uber.autodispose2:autodispose:$rootProject.ext.autodisposeVersion"
    api "com.uber.autodispose2:autodispose-android:$rootProject.ext.autodisposeVersion"
    api "com.uber.autodispose2:autodispose-lifecycle:$rootProject.ext.autodisposeVersion"
    api "com.uber.autodispose2:autodispose-androidx-lifecycle:$rootProject.ext.autodisposeVersion"
    //沉浸式状态栏
    api "com.gyf.immersionbar:immersionbar:$rootProject.ext.immersionbarVersion"//基础依赖包，必须要依赖
    api "com.gyf.immersionbar:immersionbar-components:$rootProject.ext.immersionbarVersion"
    //沉浸式状态栏 - fragment快速实现（可选）
    api "com.gyf.immersionbar:immersionbar-ktx:$rootProject.ext.immersionbarVersion"//kotlin扩展（可选）
    //AndroidAutoSize适配方案
    api "me.jessyan:autosize:$rootProject.ext.autosizeVersion"
    //Room持久性库
    api "androidx.room:room-runtime:$rootProject.ext.roomVersion"
    //Room持久性库 - For Kotlin use kapt instead of annotationProcessor
    annotationProcessor "androidx.room:room-compiler:$rootProject.ext.roomVersion"
    //Room持久性库 - optional - Kotlin Extensions and Coroutines support for Room
    api "androidx.room:room-ktx:$rootProject.ext.roomVersion"
    //Room持久性库 - optional - RxJava support for Room
    api "androidx.room:room-rxjava2:$rootProject.ext.roomVersion"
    //Room持久性库 - optional - Guava support for Room, including Optional and ListenableFuture
    api "androidx.room:room-guava:$rootProject.ext.roomVersion"
    //Room持久性库 - Test helpers
    testImplementation "androidx.room:room-testing:$rootProject.ext.roomVersion"

    //友盟消息推送
    //基础组件库依赖(必须) Push 6.1.0版本必须升级新版本Common SDK
    api "com.umeng.umsdk:common:$rootProject.ext.umsdkCommonVersion"
    api "com.umeng.umsdk:utdid:$rootProject.ext.umsdkUtdidVersion"
    api "com.umeng.umsdk:asms:$rootProject.ext.umsdkAsmsVersion"
    api "com.umeng.umsdk:crash:$rootProject.ext.umsdkCrashVersion"
    //友盟push相关依赖(必须)
    api "com.umeng.umsdk:push:$rootProject.ext.umsdkPushVersion"
    api "com.umeng.umsdk:alicloud-httpdns:$rootProject.ext.umsdkAlicloudHttpdnsVersion"
    api "com.umeng.umsdk:alicloud-utils:$rootProject.ext.umsdkAlicloudUtilsVersion"
    api "com.umeng.umsdk:alicloud_beacon:$rootProject.ext.umsdkAlicloudBeaconVersion"
    api "com.umeng.umsdk:agoo-accs:$rootProject.ext.umsdkAgooAccsVersion"
    api "com.umeng.umsdk:agoo_networksdk:$rootProject.ext.umsdkAgooNetworksdkVersion"
    api "com.umeng.umsdk:agoo_tlog:$rootProject.ext.umsdkAgooTlogVersion"
    api "com.umeng.umsdk:agoo_tnet4android:$rootProject.ext.umsdkAgooTnet4androidVersion"

    //PictureSelector 2.0
    //api "io.github.lucksiege:pictureselector:$rootProject.ext.pictureSelectorVersion"
}
